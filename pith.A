%include "m.A"

  lea rdx, [rel tail]
  import putstr
  import read
  import plus

  mov   edi, 0x0          ; fd
  lea   rsi, [rel buffer] ; char*
  mov   edx, buffer.size  ; length
  call  [rel read]
  cmp   eax, 0
  je    exit

  mov   edi, 0x1          ; fd
  lea   rsi, [rel buffer] ; const char*
  mov   edx, eax          ; length
  call  [rel putstr]
exit:
  ret

buffer:
  times 1<<10 db '_'
  .size: equ $ - buffer

tail:
