%include "m.A"

imports [rel tail] \
      , putstr     \
      , ns         \
      , read       \
      , plus
  mov     rdx, [rel ns]
  import  putchars
  import  putchar2

  mov   edi, 0x0          ; fd
  lea   rsi, [rel buffer] ; char*
  mov   edx, buffer.size  ; length
  call  [rel read]
  cmp   eax, 0
  je    exit

  mov   edi, 0x1          ; fd
  lea   rsi, [rel buffer] ; const char*
  mov   edx, eax          ; length
  call  [rel putstr]

  mov   rdi, 'abcdefgh'
  call  [rel putchar2]
exit:
  ret

buffer:
  times 1<<10 db '_'
  .size: equ $ - buffer

tail:
